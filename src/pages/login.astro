--- 
import Layout from "../layouts/Layout.astro"
// TODO: add styling, add error messages, abort the function if there is an error
---
<script>
  import { startRegistration } from '@simplewebauthn/browser';
  import { actions } from "astro:actions";
  // <button>
  const elemBegin = document.getElementById('btnBegin');
  // <span>/<p>/etc...
  const elemSuccess = document.getElementById('success');
  // <span>/<p>/etc...
  const elemError = document.getElementById('error');
  const elemUsername = document.getElementById('username');
  if (elemBegin && elemSuccess && elemError){
  // Start registration when the user clicks a button
  elemBegin.addEventListener('click', async () => {
    if(!(elemUsername as HTMLInputElement)?.value) return
    // Reset success/error messages
    elemSuccess.innerHTML = '';
    elemError.innerHTML = '';
    // GET registration options from the endpoint that calls
    // @simplewebauthn/server -> generateRegistrationOptions()
    console.log(elemUsername.value)
    const resp = await actions.getRegOpts({userName:(elemUsername as HTMLInputElement)?.value});
    const optionsJSON = resp.data;
    console.log(optionsJSON)
    let attResp;
    try {
      // Pass the options to the authenticator and wait for a response
      if (optionsJSON) attResp = await startRegistration({ optionsJSON })
      else throw new Error("No optionsJSON")
    } catch (error) {
      // Some basic error handling
      if (error.name === 'InvalidStateError') {
        elemError.innerText = 'Error: Authenticator was probably already registered by user';
      } else {
	elemError.innerText = JSON.stringify(error);
      }

      throw error;
    }
    console.log(optionsJSON,attResp,"hi")
    // POST the response to the endpoint that calls
    // @simplewebauthn/server -> verifyRegistrationResponse()
    const verificationResp = await actions.verifyRegRes({response:attResp,userID:optionsJSON.user.id})

    // Wait for the results of verification
    const verification = verificationResp.data;

    // Show UI appropriate for the `verified` status
    if (verification) {
      elemSuccess.innerHTML = 'Success!';
    } else {
      elemError.innerHTML = `Oh no, something went wrong! Response: <pre>${JSON.stringify(
        verification,
      )}</pre>`;
    }
    });
    }
</script>
  <Layout>
<p id="error"></p>
<p id="success"></p>
<input type="text" class="input" id="username"/>
<button id="btnBegin" class="btn">Begin</button>
  </Layout>
